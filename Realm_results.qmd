---
title: "RLE_realm"
format: html
---

Load Libraries

```{r}
# libraries
library(tidyverse)
library(grid)
library(readxl)
library(nbaR)
library(extrafont) # this has tools for embedding fonts in vector graphics which 
# is required by the design team of the booklet.

loadfonts(device = "pdf") # this is required as device = cairo_pdf is not compatible with CorelDraw

```

Import data for each realm.

terrestrial, river, wetland, estuarine are also available in the output folders of the following repos:

<https://github.com/askowno/RLE_terr/blob/main/outputs/ter_results_for_integration.csv>

<https://github.com/askowno/RLE_est/blob/main/outputs/est_results_for_integration.csv>

<https://github.com/askowno/RLE_wet/blob/main/outputs/wet_results_for_integration.csv>

<https://github.com/askowno/RLE_riv/blob/main/outputs/riv_results_for_integration.csv>

```{r}
# import RLE data for each realm and then make integrated table
# COUNTS and EXTENT RLE and EPL
# levels added to get cols in right sequence but not sure they are needed for the plots 

ter_results <- read.csv("C:/Rdata/RLE_terr/outputs/ter_results_for_integration.csv") %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 

riv_results <- read.csv("C:/Rdata/RLE_riv/outputs/riv_results_for_integration.csv")  %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 

wet_results <- read.csv("C:/Rdata/RLE_wet/outputs/wet_results_for_integration.csv")  %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 

est_results <- read.csv("C:/Rdata/RLE_est/outputs/est_results_for_integration.csv")  %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 

mar_results <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/Marine/mar_results_for_integration.csv")  %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "NT", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 

cst_results <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/Coast/cst_results_for_integration.csv")  %>% mutate(RLE = factor(RLE, levels = c("CR", "EN", "VU", "NT", "LC"), ordered = TRUE), EPL = factor(EPL, levels = c("WP", "MP", "PP", "NP"), ordered = TRUE)) 


# read in nba2018 results to fill in  sub antarctic / marine
nba18rlecount <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/PEI/nba2018_rle_realm_count.csv")
nba18rleext <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/PEI/nba2018_rle_realm_ext.csv")
nba18eplcount <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/PEI/nba2018_epl_realm_count.csv")
nba18eplext <- read.csv("C:/Users/skownoa/Dropbox/NBAwork/PEI/nba2018_epl_realm_ext.csv")

sub_rle_count <- filter(nba18rlecount, realm == "sub") %>% select(-Total)
sub_rle_ext   <- filter(nba18rleext, realm == "sub") %>% select(-Total)
sub_epl_count <- filter(nba18eplcount, realm == "sub") %>% select(-Total)
sub_epl_ext   <- filter(nba18eplext, realm == "sub") %>% select(-Total)

```

Reformat the data to ensure that the results can be "bound" into a single table for each metric (RLE count, RLE extent, EPL count, EPL extent). Add realm column to ensure than in the bound data one can identify the rows for each realm.

```{r}
ter_rle_count <- ter_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "ter")
ter_rle_ext <- ter_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "ter")
  
mar_rle_count <- mar_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "mar") %>%
  mutate(LC = NT + LC) %>% select(-NT)
mar_rle_ext <- mar_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "mar") %>%
  mutate(LC = NT + LC) %>% select(-NT)

est_rle_count <- est_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "est")
est_rle_ext <- est_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "est")

riv_rle_count <- riv_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "riv")
riv_rle_ext <- riv_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)/1e3) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "riv")

wet_rle_count <- wet_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "wet")
wet_rle_ext <- wet_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "wet")

# Add coastal when done
cst_rle_count <- cst_results %>%
  select(RLE, type) %>%
    count(RLE) %>%
  pivot_wider(names_from = RLE, values_from = n, values_fill = 0) %>%
  mutate(realm = "cst") %>%
  mutate(LC = NT + LC) %>% select(-NT)

cst_rle_ext <- cst_results %>%
  select(RLE, extent) %>%
  group_by(RLE) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = RLE, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "cst") %>%
  mutate(LC = NT + LC) %>% select(-NT)
```

Repeat data compilation for EPL

```{r}

ter_epl_count <- ter_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "ter")
ter_epl_ext <- ter_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "ter")
  
mar_epl_count <- mar_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "mar")
mar_epl_ext <- mar_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "mar")
  
est_epl_count <- est_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "est")
est_epl_ext <- est_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "est")

riv_epl_count <- riv_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "riv")
riv_epl_ext <- riv_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)/1e3) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "riv")

wet_epl_count <- wet_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "wet")
wet_epl_ext <- wet_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "wet")

# Add coastal 
# Add coastal when done
cst_epl_count <- cst_results %>%
  select(EPL, type) %>%
    count(EPL) %>%
  pivot_wider(names_from = EPL, values_from = n, values_fill = 0) %>%
  mutate(realm = "cst")
cst_epl_ext <- cst_results %>%
  select(EPL, extent) %>%
  group_by(EPL) %>%
  summarise(tot_extent = sum(extent, na.rm = TRUE)) %>%
  pivot_wider(names_from = EPL, values_from = tot_extent, values_fill = 0) %>%
  mutate(realm = "cst")
```

RLE results per realm (put all the tables together)

```{r}

# BIND tables of RLE count together
rle_count_all <- bind_rows(ter_rle_count, mar_rle_count, riv_rle_count, wet_rle_count, est_rle_count, cst_rle_count, sub_rle_count) %>%
  rename( `Critically Endangered` = CR, 
         `Endangered` = EN, 
         `Vulnerable` = VU, 
         `Least Concern` = LC ) %>%
   mutate(realm = recode(realm,
                        "sub" = "Subantarctic",
                        "cst" = "Coastal", 
                        "mar" = "Marine",
                        "est" = "Estuarine",
                        "wet" = "Wetland",
                        "riv" = "River",
                        "ter" = "Terrestrial"))  %>%  
mutate(realm = factor(realm, levels = c("Subantarctic", "Coastal", "Estuarine", "Marine",  "Wetland", "River", "Terrestrial"))) %>%
  arrange(realm)

# Write to file
write.csv(rle_count_all, "outputs/rle_count_per_realm.csv")

# BIND tables of RLE extent together
rle_ext_all <- bind_rows(ter_rle_ext, mar_rle_ext, riv_rle_ext, wet_rle_ext, est_rle_ext, cst_rle_ext, sub_rle_ext) %>%
  rename( `Critically Endangered` = CR, 
         `Endangered` = EN, 
         `Vulnerable` = VU, 
         `Least Concern` = LC ) %>%
   mutate(realm = recode(realm,
                        "sub" = "Subantarctic",
                        "cst" = "Coastal", 
                        "mar" = "Marine",
                        "est" = "Estuarine",
                        "wet" = "Wetland",
                        "riv" = "River",
                        "ter" = "Terrestrial"))  %>%  
mutate(realm = factor(realm, levels = c("Subantarctic", "Coastal", "Estuarine", "Marine",  "Wetland", "River", "Terrestrial"))) %>%
  arrange(realm)

# Write to file
write.csv(rle_ext_all, "outputs/rle_ext_per_realm.csv")
```

EPL results per realm

```{r}
 
# BIND tables of EPL count together
epl_count_all <- bind_rows(ter_epl_count, mar_epl_count, est_epl_count, riv_epl_count, wet_epl_count, cst_epl_count, sub_epl_count) %>%
  rename( `Well Protected` = WP, 
         `Moderately Protected` = MP, 
         `Poorly Protected` = PP, 
         `Not Protected` = NP ) %>%
   mutate(realm = recode(realm,
                        "sub" = "Subantarctic",
                        "cst" = "Coastal", 
                        "mar" = "Marine",
                        "est" = "Estuarine",
                        "wet" = "Wetland",
                        "riv" = "River",
                        "ter" = "Terrestrial",
                        "Overall" = "Overall"))  %>%  
mutate(realm = factor(realm, levels = c( "Subantarctic", "Coastal", "Estuarine", "Marine",  "Wetland", "River", "Terrestrial"))) %>%
  arrange(realm)

# Write to file
write.csv(epl_count_all, "outputs/epl_count_per_realm.csv")

# BIND tables of EPL extent together
epl_ext_all <- bind_rows(ter_epl_ext, mar_epl_ext, est_epl_ext, riv_epl_ext, wet_epl_ext, cst_epl_ext, sub_epl_ext) %>%
  rename( `Well Protected` = WP, 
         `Moderately Protected` = MP, 
         `Poorly Protected` = PP, 
         `Not Protected` = NP ) %>%
   mutate(realm = recode(realm,
                        "sub" = "Subantarctic",
                        "cst" = "Coastal", 
                        "mar" = "Marine",
                        "est" = "Estuarine",
                        "wet" = "Wetland",
                        "riv" = "River",
                        "ter" = "Terrestrial",
                        "Overall" = "Overall"))  %>%  
mutate(realm = factor(realm, levels = c( "Subantarctic", "Coastal", "Estuarine", "Marine",  "Wetland", "River", "Terrestrial"))) %>%
  arrange(realm) 

# Write to file
write.csv(epl_ext_all, "outputs/epl_ext_per_realm.csv")
```

Selected results as a table for booklet and website

```{r}

# EPL 
realm_epl <- epl_count_all %>%
  rowwise() %>%
  mutate(total = sum(c_across(`Well Protected`:`Not Protected`), na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(
    pct_WP = `Well Protected` / total * 100,
    pct_NP = `Not Protected` / total * 100
  ) %>%
  select(realm, pct_WP, pct_NP)

overall_epl <- epl_count_all %>%
  filter(realm != "Coastal") %>%
  summarise(
    WP = sum(`Well Protected`, na.rm = TRUE),
    NP = sum(`Not Protected`, na.rm = TRUE),
    total = sum(`Well Protected` + `Moderately Protected` + `Poorly Protected` + `Not Protected`, na.rm = TRUE)
  ) %>%
  mutate(
    pct_WP = WP / total * 100,
    pct_NP = NP / total * 100,
    realm = "Overall"
  ) %>%
  select(realm, pct_WP, pct_NP)

# Combine
final_epl_perc <- bind_rows(realm_epl, overall_epl)
# Write to file
write.csv(final_epl_perc, "outputs/final_epl_perc.csv")

# RLE stats for booklet 
realm_rle <- rle_count_all %>%
  rowwise() %>%
  mutate(total = sum(c_across(`Critically Endangered`:`Least Concern`), na.rm = TRUE), 
         threatened = sum(c_across(`Critically Endangered`:`Vulnerable`), na.rm = TRUE),
         pct_TH = threatened / total * 100) %>%
    select(realm, pct_TH)

# Overall excluding realm = "cst"
overall_rle <- rle_count_all %>%
  filter(realm != "cst") %>%
  summarise(
    CR = sum(`Critically Endangered`, na.rm = TRUE),
    EN = sum(`Endangered`, na.rm = TRUE),
    VU = sum(`Vulnerable`, na.rm = TRUE),
    LC = sum(`Least Concern`, na.rm = TRUE)
  ) %>%
  mutate(
    total = CR + EN + VU + LC,
    threatened = CR + EN + VU,
    pct_TH = threatened / total * 100,
    realm = "Overall"
  ) %>%
  select(realm, pct_TH)

# Combine
final_rle_perc <- bind_rows(realm_rle, overall_rle)


# Write to file
write.csv(final_rle_perc, "outputs/final_rle_perc.csv")



```

RLE plots per realm

```{r}
# Make RE count plots for booklet

rle_count_plot <- nba_plot(rle_count_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = TRUE,
                     LAB = "Percentage of ecosystem types",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6)

rle_count_plot <- rle_count_plot +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5))
rle_count_plot <- rle_count_plot +
     annotation_custom(
    grob = textGrob(
      "(A)", 
      x = unit(0.00, "npc"),  # slight overshoot left
      y = unit(1.00, "npc"),   # slight overshoot top
      hjust = 0, vjust = 1,
      gp = gpar(fontsize = 6)
    )
  )

ggsave(
  filename = "outputs/rle_count_plot.pdf",    # File name with extension for format
  plot = rle_count_plot,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 9, height = 7, units = "cm") 

# png  format for maps and web content plots and maps 
ggsave(
  filename = "outputs/rle_count_plot.png",    # File name with extension for format
  plot = rle_count_plot,
  dpi = 300, 
  width = 9, height = 7, units = "cm") # png format for maps and web content plots and maps 

```

```{r}
# Make RLE  extent  plots for booklet

rle_ext_plot <- nba_plot(rle_ext_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = FALSE,
                     LAB = "Percentage of ecosystem extent",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6)

rle_ext_plot <- rle_ext_plot +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5))
rle_ext_plot <- rle_ext_plot +
annotation_custom(
    grob = textGrob(
      "(B)", 
      x = unit(0.00, "npc"),  # slight overshoot left
      y = unit(1.00, "npc"),   # slight overshoot top
      hjust = 0, vjust = 1,
      gp = gpar(fontsize = 6)
    )
  )

ggsave(
  filename = "outputs/rle_ext_plot.pdf",    # File name with extension for format
  plot = rle_ext_plot,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 9, height = 7, units = "cm") 


# png format for maps and web content plots and maps 
ggsave(
  filename = "outputs/rle_ext_plot.png",    # File name with extension for format
  plot = rle_ext_plot,
  dpi = 300, 
  width = 9, height = 7, units = "cm") 

```

EPL plots per realm

```{r}
# Make EPL count plots for booklet

epl_count_plot <- nba_plot(epl_count_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = TRUE,
                     LAB = "Percentage of ecosystem types",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6)

epl_count_plot <- epl_count_plot +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5))
epl_count_plot <- epl_count_plot +
annotation_custom(
    grob = textGrob(
      "(A)", 
      x = unit(0.00, "npc"),  # slight overshoot left
      y = unit(1.00, "npc"),   # slight overshoot top
      hjust = 0, vjust = 1,
      gp = gpar(fontsize = 6)
    )
  )

ggsave(
  filename = "outputs/epl_count_plot.pdf",    # File name with extension for format
  plot = epl_count_plot,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 9, height = 7, units = "cm") 


# png format for maps and web content plots and maps 
ggsave(
  filename = "outputs/epl_count_plot.png",    # File name with extension for format
  plot = epl_count_plot,
  dpi = 300, 
  width = 9, height = 7, units = "cm") 
```

```{r}
# Make EXT plots for booklet

epl_ext_plot <- nba_plot(epl_ext_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = FALSE,
                     LAB = "Percentage of ecosystem extent",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6)

epl_ext_plot <- epl_ext_plot +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5))
epl_ext_plot <- epl_ext_plot +
annotation_custom(
    grob = textGrob(
      "(B)", 
      x = unit(0.00, "npc"),  # slight overshoot left
      y = unit(1.00, "npc"),   # slight overshoot top
      hjust = 0, vjust = 1,
      gp = gpar(fontsize = 6)
    )
  )

ggsave(
  filename = "outputs/epl_ext_plot.pdf",    # File name with extension for format
  plot = epl_ext_plot,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 9, height = 7, units = "cm") 


# png format for maps and web content plots and maps 
ggsave(
  filename = "outputs/epl_ext_plot.png",    # File name with extension for format
  plot = epl_ext_plot,
  dpi = 300, 
  width = 9, height = 7, units = "cm") 
```

Make Plots for Headline Indicator figure (3)

```{r}
# Make RLE and EPL count plots for booklet Headline Indicator plot (figure 3) 

rle_hl <- nba_plot(rle_count_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = FALSE,
                     LAB = "Percentage of ecosystem types",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6) +
           theme(legend.position = "none")

# rle_hl <- rle_hl +
#   theme(
#     legend.position = "bottom",             # keep it at the bottom
#     legend.margin = margin(l = -45, r = -5, t = -5, b = -5))
#   

ggsave(
  filename = "outputs/rle_hl.pdf",    # File name with extension for format
  plot = rle_hl,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 7, height = 7, units = "cm") 

# png  format for maps and web content plots and maps 
ggsave(
  filename = "outputs/rle_hl.png",    # File name with extension for format
  plot = rle_hl,
  dpi = 300, 
  width = 7, height = 7, units = "cm") # png format for maps and web content plots and maps 

# Make EPL count plots for booklet ########################################

epl_hl <- nba_plot(epl_count_all,
                     `realm`,
                     1:4,
                     CHRT = "bar",
                     NUM = FALSE,
                     LAB = "Percentage of ecosystem types",
                     SAVE = NULL,
                     SCALE_TEXT = 0.6) + 
          theme(legend.position = "none")

 # epl_hl <- epl_hl +
 #  theme(
 #    legend.position = "bottom",             # keep it at the bottom
 #    legend.margin = margin(l = -45, r = -5, t = -5, b = -5))


ggsave(
  filename = "outputs/epl_hl.pdf",    # File name with extension for format
  plot = epl_hl,
  device = "pdf", # this embeds the fonts for GE to use (see first step of addfont)
  width = 7, height = 7, units = "cm") 


# png format for maps and web content plots and maps 
ggsave(
  filename = "outputs/epl_hl.png",    # File name with extension for format
  plot = epl_hl,
  dpi = 300, 
  width = 7, height = 7, units = "cm") 

```
